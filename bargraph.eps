%!PS-Adobe-2.0
%%Title: bargraph.eps
%%Creator: gnuplot 5.0 patchlevel 3
%%CreationDate: Thu Jun 29 13:30:41 2017
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.1 (Oct 2015)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (bargraph.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 3)
  /Author (accxev)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Jun 29 13:30:41 2017)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
% redundant definitions for compatibility with prologue.ps older than 5.0.2
/LTB {BL [] LCb DL} def
/LTb {PL [] LCb DL} def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
gsave % colour palette begin
/maxcolors 0 def
/HSV2RGB {  exch dup 0.0 eq {pop exch pop dup dup} % achromatic gray
  { /HSVs exch def /HSVv exch def 6.0 mul dup floor dup 3 1 roll sub
     /HSVf exch def /HSVi exch cvi def /HSVp HSVv 1.0 HSVs sub mul def
	 /HSVq HSVv 1.0 HSVs HSVf mul sub mul def 
	 /HSVt HSVv 1.0 HSVs 1.0 HSVf sub mul sub mul def
	 /HSVi HSVi 6 mod def 0 HSVi eq {HSVv HSVt HSVp}
	 {1 HSVi eq {HSVq HSVv HSVp}{2 HSVi eq {HSVp HSVv HSVt}
	 {3 HSVi eq {HSVp HSVq HSVv}{4 HSVi eq {HSVt HSVp HSVv}
	 {HSVv HSVp HSVq} ifelse} ifelse} ifelse} ifelse} ifelse
  } ifelse} def
/Constrain {
  dup 0 lt {0 exch pop}{dup 1 gt {1 exch pop} if} ifelse} def
/YIQ2RGB {
  3 copy -1.702 mul exch -1.105 mul add add Constrain 4 1 roll
  3 copy -0.647 mul exch -0.272 mul add add Constrain 5 1 roll
  0.621 mul exch -0.956 mul add add Constrain 3 1 roll } def
/CMY2RGB {  1 exch sub exch 1 exch sub 3 2 roll 1 exch sub 3 1 roll exch } def
/XYZ2RGB {  3 copy -0.9017 mul exch -0.1187 mul add exch 0.0585 mul exch add
  Constrain 4 1 roll 3 copy -0.0279 mul exch 1.999 mul add exch
  -0.9844 mul add Constrain 5 1 roll -0.2891 mul exch -0.5338 mul add
  exch 1.91 mul exch add Constrain 3 1 roll} def
/SelectSpace {ColorSpace (HSV) eq {HSV2RGB}{ColorSpace (XYZ) eq {
  XYZ2RGB}{ColorSpace (CMY) eq {CMY2RGB}{ColorSpace (YIQ) eq {YIQ2RGB}
  if} ifelse} ifelse} ifelse} def
/InterpolatedColor true def
/grayindex {/gidx 0 def
  {GrayA gidx get grayv ge {exit} if /gidx gidx 1 add def} loop} def
/dgdx {grayv GrayA gidx get sub GrayA gidx 1 sub get
  GrayA gidx get sub div} def 
/redvalue {RedA gidx get RedA gidx 1 sub get
  RedA gidx get sub dgdxval mul add} def
/greenvalue {GreenA gidx get GreenA gidx 1 sub get
  GreenA gidx get sub dgdxval mul add} def
/bluevalue {BlueA gidx get BlueA gidx 1 sub get
  BlueA gidx get sub dgdxval mul add} def
/interpolate {
  grayindex grayv GrayA gidx get sub abs 1e-5 le
    {RedA gidx get GreenA gidx get BlueA gidx get}
    {/dgdxval dgdx def redvalue greenvalue bluevalue} ifelse} def
/GrayA [0 .0015 .0035 .0065 .0125 .0235 .04 .062 .09 .102 .1295 .1575 .187 
  .1925 .221 .258 .2935 .331 .3705 .399 .4075 .441 .476 .5125 .5325 .5655 
  .5995 .633 .6705 .705 .7405 .78 .799 .81 .8545 .904 .911 .9585 1 1 ] def
/RedA [0 .0172 .0355 .0555 .0858 .1261 .1671 .1999 .2173 .2187 .2129 .2 
  .1862 .1842 .1789 .1905 .2263 .2913 .3859 .4654 .4902 .589 .6874 .7759 
  .8156 .8651 .8945 .9033 .8946 .8759 .854 .8355 .8312 .8305 .8424 .8824 
  .8899 .9478 1 1 ] def
/GreenA [0 .0054 .0114 .0184 .03 .0487 .0752 .1118 .1625 .1858 .2424 .3028 
  .3671 .3789 .4377 .5053 .5569 .5948 .6163 .6217 .6219 .6186 .6114 .605 
  .6038 .6078 .6214 .6451 .6828 .7256 .7742 .829 .8541 .8679 .9171 .9569 
  .9613 .9846 1 1 ] def
/BlueA [0 .015 .0313 .0503 .0815 .1303 .195 .2716 .3547 .3848 .4402 .4758 
  .4908 .4912 .4825 .4499 .4064 .3607 .3272 .3192 .32 .3386 .3843 .4573 
  .5057 .5936 .6875 .7751 .8589 .9171 .9557 .9748 .9767 .9762 .9669 .9573 
  .9571 .9684 1 1 ] def
/pm3dround {maxcolors 0 gt {dup 1 ge
	{pop 1} {maxcolors mul floor maxcolors 1 sub div} ifelse} if} def
/pm3dGamma 1.0 1.5 Gamma mul div def
/ColorSpace (RGB) def
Color InterpolatedColor or { % COLOUR vs. GRAY map
  InterpolatedColor { %% Interpolation vs. RGB-Formula
    /g {stroke pm3dround /grayv exch def interpolate
        SelectSpace setrgbcolor} bind def
  }{
  /g {stroke pm3dround dup cF7 Constrain exch dup cF5 Constrain exch cF15 Constrain 
       SelectSpace setrgbcolor} bind def
  } ifelse
}{
  /g {stroke pm3dround pm3dGamma exp setgray} bind def
} ifelse
1.000 UL
LTb
LCb setrgbcolor
546 280 M
63 0 V
5437 0 R
-63 0 V
stroke
462 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
546 1198 M
63 0 V
5437 0 R
-63 0 V
stroke
462 1198 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
546 2116 M
63 0 V
5437 0 R
-63 0 V
stroke
462 2116 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
546 3035 M
63 0 V
5437 0 R
-63 0 V
stroke
462 3035 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
546 3953 M
63 0 V
5437 0 R
-63 0 V
stroke
462 3953 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
546 4871 M
63 0 V
5437 0 R
-63 0 V
stroke
462 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
862 280 M
0 63 V
0 4528 R
0 -63 V
stroke
862 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (2-7008)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1538 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1538 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (4-7000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2214 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2214 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (6-7000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2890 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2890 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (7-7000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3566 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3566 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (8-7000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4243 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4243 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (9-7000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4919 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4919 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (10-7000)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
636 280 M
0 63 V
0 4528 R
0 -63 V
stroke
636 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1538 280 M
0 63 V
0 4528 R
0 -63 V
2439 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2439 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 40)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3341 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3341 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 60)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4243 280 M
0 63 V
0 4528 R
0 -63 V
5144 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5144 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
6046 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6046 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 120)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
3296 4671 M
[ [(Helvetica) 150.0 0.0 true true 0 (% of saddle sizes for games with i actions)]
] -50.0 MCshow
% Begin plot #1
1.000 UL
LTb
0 g /Helvetica findfont 140 scalefont setfont
/vshift -46 def
0 g 1.000 659 280 46 4363 BoxColFill
LCb setrgbcolor
659 280 N
0 4362 V
45 0 V
704 280 L
-45 0 V
Z stroke
1.000 UL
LTb
0 g .1111 g 1.000 704 280 46 230 BoxColFill
LCb setrgbcolor
704 280 N
0 229 V
45 0 V
0 -229 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g % End plot #1
% Begin plot #2
1.000 UL
LTb
0 g /Helvetica findfont 140 scalefont setfont
0 g 1.000 1335 280 46 3466 BoxColFill
LCb setrgbcolor
1335 280 N
0 3465 V
45 0 V
0 -3465 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .1111 g 1.000 1380 280 46 63 BoxColFill
LCb setrgbcolor
1380 280 N
0 62 V
45 0 V
0 -62 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .2222 g 1.000 1425 280 46 999 BoxColFill
LCb setrgbcolor
1425 280 N
0 998 V
45 0 V
0 -998 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .3333 g 1.000 1470 280 46 1659 BoxColFill
LCb setrgbcolor
1470 280 N
0 1658 V
45 0 V
0 -1658 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g % End plot #2
% Begin plot #3
1.000 UL
LTb
0 g /Helvetica findfont 140 scalefont setfont
0 g 1.000 2011 280 46 692 BoxColFill
LCb setrgbcolor
2011 280 N
0 691 V
45 0 V
0 -691 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .1111 g 1.000 2056 280 46 11 BoxColFill
LCb setrgbcolor
2056 280 N
0 10 V
45 0 V
0 -10 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .2222 g 1.000 2101 280 46 137 BoxColFill
LCb setrgbcolor
2101 280 N
0 136 V
45 0 V
0 -136 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .3333 g 1.000 2146 280 46 311 BoxColFill
LCb setrgbcolor
2146 280 N
0 310 V
45 0 V
0 -310 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .4444 g 1.000 2191 280 47 850 BoxColFill
LCb setrgbcolor
2191 280 N
0 849 V
46 0 V
0 -849 V
-46 0 V
Z stroke
1.000 UL
LTb
0 g .5556 g 1.000 2237 280 46 2597 BoxColFill
LCb setrgbcolor
2237 280 N
0 2596 V
45 0 V
0 -2596 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g % End plot #3
% Begin plot #4
1.000 UL
LTb
0 g /Helvetica findfont 140 scalefont setfont
0 g 1.000 2687 280 46 358 BoxColFill
LCb setrgbcolor
2687 280 N
0 357 V
45 0 V
0 -357 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .1111 g 1.000 2732 280 47 4 BoxColFill
LCb setrgbcolor
2732 280 N
0 3 V
46 0 V
0 -3 V
-46 0 V
Z stroke
1.000 UL
LTb
0 g .2222 g 1.000 2778 280 46 46 BoxColFill
LCb setrgbcolor
2778 280 N
0 45 V
45 0 V
0 -45 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .3333 g 1.000 2823 280 46 83 BoxColFill
LCb setrgbcolor
2823 280 N
0 82 V
45 0 V
0 -82 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .4444 g 1.000 2868 280 46 237 BoxColFill
LCb setrgbcolor
2868 280 N
0 236 V
45 0 V
0 -236 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .5556 g 1.000 2913 280 46 740 BoxColFill
LCb setrgbcolor
2913 280 N
0 739 V
45 0 V
0 -739 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .6667 g 1.000 2958 280 46 3130 BoxColFill
LCb setrgbcolor
2958 280 N
0 3129 V
45 0 V
0 -3129 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g % End plot #4
% Begin plot #5
1.000 UL
LTb
0 g /Helvetica findfont 140 scalefont setfont
0 g 1.000 3364 280 46 198 BoxColFill
LCb setrgbcolor
3364 280 N
0 197 V
45 0 V
0 -197 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .2222 g 1.000 3454 280 46 10 BoxColFill
LCb setrgbcolor
3454 280 N
0 9 V
45 0 V
0 -9 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .3333 g 1.000 3499 280 46 24 BoxColFill
LCb setrgbcolor
3499 280 N
0 23 V
45 0 V
0 -23 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .4444 g 1.000 3544 280 46 60 BoxColFill
LCb setrgbcolor
3544 280 N
0 59 V
45 0 V
0 -59 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .5556 g 1.000 3589 280 46 149 BoxColFill
LCb setrgbcolor
3589 280 N
0 148 V
45 0 V
0 -148 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .6667 g 1.000 3634 280 46 578 BoxColFill
LCb setrgbcolor
3634 280 N
0 577 V
45 0 V
0 -577 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .7778 g 1.000 3679 280 46 3579 BoxColFill
LCb setrgbcolor
3679 280 N
0 3578 V
45 0 V
0 -3578 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g % End plot #5
% Begin plot #6
1.000 UL
LTb
0 g /Helvetica findfont 140 scalefont setfont
0 g 1.000 4040 280 46 105 BoxColFill
LCb setrgbcolor
4040 280 N
0 104 V
45 0 V
0 -104 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .2222 g 1.000 4130 280 46 5 BoxColFill
LCb setrgbcolor
4130 280 N
0 4 V
45 0 V
0 -4 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .3333 g 1.000 4175 280 46 9 BoxColFill
LCb setrgbcolor
4175 280 N
0 8 V
45 0 V
0 -8 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .4444 g 1.000 4220 280 46 10 BoxColFill
LCb setrgbcolor
4220 280 N
0 9 V
45 0 V
0 -9 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .5556 g 1.000 4265 280 46 27 BoxColFill
LCb setrgbcolor
4265 280 N
0 26 V
45 0 V
0 -26 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .6667 g 1.000 4310 280 46 85 BoxColFill
LCb setrgbcolor
4310 280 N
0 84 V
45 0 V
0 -84 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .7778 g 1.000 4355 280 47 449 BoxColFill
LCb setrgbcolor
4355 280 N
0 448 V
46 0 V
0 -448 V
-46 0 V
Z stroke
1.000 UL
LTb
0 g .8889 g 1.000 4401 280 46 3910 BoxColFill
LCb setrgbcolor
4401 280 N
0 3909 V
45 0 V
0 -3909 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g % End plot #6
% Begin plot #7
1.000 UL
LTb
0 g /Helvetica findfont 140 scalefont setfont
0 g 1.000 4716 280 46 61 BoxColFill
LCb setrgbcolor
4716 280 N
0 60 V
45 0 V
0 -60 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .4444 g 1.000 4896 280 46 5 BoxColFill
LCb setrgbcolor
4896 280 N
0 4 V
45 0 V
0 -4 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .5556 g 1.000 4941 280 47 4 BoxColFill
LCb setrgbcolor
4941 280 N
0 3 V
46 0 V
0 -3 V
-46 0 V
Z stroke
1.000 UL
LTb
0 g .6667 g 1.000 4987 280 46 13 BoxColFill
LCb setrgbcolor
4987 280 N
0 12 V
45 0 V
0 -12 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .7778 g 1.000 5032 280 46 46 BoxColFill
LCb setrgbcolor
5032 280 N
0 45 V
45 0 V
0 -45 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g .8889 g 1.000 5077 280 46 339 BoxColFill
LCb setrgbcolor
5077 280 N
0 338 V
45 0 V
0 -338 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g 1 g 1.000 5122 280 46 4130 BoxColFill
LCb setrgbcolor
5122 280 N
0 4129 V
45 0 V
0 -4129 V
-45 0 V
Z stroke
1.000 UL
LTb
0 g % End plot #7
2.000 UL
LTb
LCb setrgbcolor
stroke gsave	%% draw gray scale smooth box
maxcolors 0 gt {/imax maxcolors def} {/imax 1024 def} ifelse
6183 280 translate 275 4591 scale 0 setlinewidth
/ystep 1 imax div def /y0 0 def /ii 0 def
{ y0 g 0 y0 N 1 0 V 0 ystep V -1 0 f
/y0 y0 ystep add def /ii ii 1 add def
ii imax ge {exit} if } loop
grestore 0 setgray
1.000 UL
LTb
LCb setrgbcolor
6183 280 N
275 0 V
0 4591 V
-275 0 V
0 -4591 V
Z stroke
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
6458 280 M
-63 0 V
stroke
6542 280 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6183 280 M
63 0 V
212 510 R
-63 0 V
stroke
6542 790 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6183 790 M
63 0 V
212 510 R
-63 0 V
stroke
6542 1300 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6183 1300 M
63 0 V
212 510 R
-63 0 V
stroke
6542 1810 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6183 1810 M
63 0 V
212 510 R
-63 0 V
stroke
6542 2320 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6183 2320 M
63 0 V
212 510 R
-63 0 V
stroke
6542 2830 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6183 2830 M
63 0 V
212 510 R
-63 0 V
stroke
6542 3340 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 7)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6183 3340 M
63 0 V
212 510 R
-63 0 V
stroke
6542 3850 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 8)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6183 3850 M
63 0 V
212 510 R
-63 0 V
stroke
6542 4360 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 9)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6183 4360 M
63 0 V
212 511 R
-63 0 V
stroke
6542 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MLshow
1.000 UL
LTb
LCb setrgbcolor
6183 4871 M
63 0 V
1.000 UP
stroke
LTb
LCb setrgbcolor
grestore % colour palette end
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
